name: Java CI

on:
  push:
    branches:
      - master
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on:
      - self-hosted
      - ${{ matrix.os }}
      - greengrass
    strategy:
      matrix:
        os: [Linux, Windows]
    name: Build on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: rm -rf /tmp/*
        continue-on-error: true
      - name: Build with Maven
        run: mvn -ntp -U clean verify
        shell: cmd
        if: matrix.os == 'Windows'
      - name: Build with Maven
        run: mvn -ntp -U clean verify
        if: matrix.os != 'Windows'
      - name: Upload Failed Test Report
        uses: actions/upload-artifact@v1.0.0
        if: failure()
        with:
          name: Failed Test Report ${{ matrix.os }}
          path: target/surefire-reports
      - name: Upload Coverage
        uses: actions/upload-artifact@v1.0.0
        if: always()
        with:
          name: Coverage Report ${{ matrix.os }}
          path: target/jacoco-report
      - name: Convert Jacoco unit test report to Cobertura
        run: python3 .github/scripts/cover2cover.py target/jacoco-report/jacoco.xml src/main/java > target/jacoco-report/cobertura.xml
        if: matrix.os == 'Linux'
      - name: Convert Jacoco interation test report to Cobertura
        run: python3 .github/scripts/cover2cover.py target/jacoco-report/jacoco-it/jacoco.xml src/main/java > target/jacoco-report/cobertura-it.xml
        if: matrix.os == 'Linux'
      - name: cobertura-report-unit-test
        uses: shaguptashaikh/cobertura-action@master
        continue-on-error: true
        with:
          # The GITHUB_TOKEN for this repo
          repo_token: ${{ github.token }}
          # Path to the cobertura file.
          path: target/jacoco-report/cobertura.xml
          # If files with 100% should be skipped from report.
          skip_covered: false
          # Minimum allowed coverage percentage as an integer.
          minimum_coverage: 65
          # Show line rate as specific column.
          show_line: true
          # Show branch rate as specific column.
          show_branch: true
          # Use class names instead of the filename
          show_class_names: true
          # Use a unique name for the report and comment
          report_name: Unit Tests Coverage Report
      - name: cobertura-report-integration-test
        uses: shaguptashaikh/cobertura-action@master
        continue-on-error: true
        with:
          # The GITHUB_TOKEN for this repo
          repo_token: ${{ github.token }}
          # Path to the cobertura file.
          path: target/jacoco-report/cobertura-it.xml
          # If files with 100% should be skipped from report.
          skip_covered: false
          # Minimum allowed coverage percentage as an integer.
          minimum_coverage: 58
          # Show line rate as specific column.
          show_line: true
          # Show branch rate as specific column.
          show_branch: true
          # Use class names instead of the filename
          show_class_names: true
          # Use a unique name for the report and comment
          report_name: Integration Tests Coverage Report
      - name: Build benchmark with Maven
        # Changes can break the benchmark, so compile it now to make sure it is buildable
        run: |
          mvn -ntp -U install -DskipTests
          mvn -ntp -U -f src/test/evergreen-kernel-benchmark install
        if: matrix.os == 'Linux'
      - run: rm -rf ~/.m2/repository/com/aws/iot/evergreen-kernel
        continue-on-error: true
        if: always()
  publish:
    needs: build
    runs-on: [self-hosted, Linux, greengrass]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Checkout Private Action
        uses: daspn/private-actions-checkout@v2
        with:
          actions_list: '["aws/aws-greengrass-component-upload-action@master"]'
          checkout_base_path: ./.github/actions
          ssh_private_key: ${{ secrets.COMPONENT_UPLOAD_ACTION_PRIVATE_KEY }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Publish with Maven
        run: mvn -ntp -U --settings settings.xml deploy -DskipTests -Dstargate-snapshot-repository-url=${{ secrets.stargate_dev_snapshot_repository_url }}
      - run: sudo apt-get install -y awscli
      - name: Upload to S3
        run: |
          aws s3 cp target/Greengrass.jar s3://gg-evergreen-releases/${{github.repository}}/${{github.ref}}/evergreen-${{github.sha}}.jar
          aws s3 cp target/aws.greengrass.nucleus.zip s3://gg-evergreen-releases/${{github.repository}}-zip/${{github.ref}}/evergreen-${{github.sha}}.zip
      - run: mkdir -p target/artifacts && cp target/aws.greengrass.nucleus.zip target/artifacts/aws.greengrass.nucleus.zip
      - uses: ./.github/actions/aws-greengrass-component-upload-action
        name: Upload to GCS
        env:
          AWS_REGION: us-east-1
        with:
          recipePath: aws.greengrass.Nucleus.yaml
          artifactDirectoryPath: target/artifacts
          endpoint: https://evergreen-gamma.us-east-1.amazonaws.com
          autoBumpVersion: true
          publishAsPublic: true
