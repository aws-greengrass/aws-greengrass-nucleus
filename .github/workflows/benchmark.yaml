name: Benchmark

on:
  push:
    branches:
      - master

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.evergreen_dev_snapshot_access_key_id }}
          aws-secret-access-key: ${{ secrets.evergreen_dev_snapshot_access_key_secret }}
          aws-region: us-west-2
      - name: Build EG with Maven
        run: mvn -ntp -q install -DskipTests=true
      - name: Build benchmark with Maven
        run: mvn -ntp -q -f src/test/evergreen-kernel-benchmark install
      - name: JMH Benchmark
        # The JVM arguments provided below are intended to tune the JVM to keep the heap as small as possible
        # and to release unused heap space back to the OS
        # -f 5 -- Sets "forks" to 5 so it will run 5 times in separate JVMs
        run: >-
          java -jar src/test/evergreen-kernel-benchmark/target/benchmarks.jar
          -rf json
          -f 5
          -wi 0
          -jvmArgs "-Xms1m -XX:MaxHeapFreeRatio=10 -XX:MinHeapFreeRatio=5 -XX:GCTimeRatio=19
          -XX:NativeMemoryTracking=summary -Xss232k"
          -prof com.aws.iot.evergreen.jmh.profilers.ForcedGcMemoryProfiler
          -i 1
