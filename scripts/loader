#!/bin/sh -x

PWD=$(dirname "$0")

# Assuming loader is launched from "$GG_ROOT/alts/current/distro/bin/loader"
GG_ROOT=$(cd $PWD/../../../..; pwd)

echo "Greengrass root: "${GG_ROOT}

LAUNCH_DIR="$GG_ROOT/alts/current"
CONFIG_FILE=""

launch_kernel() {
  if [ ! -d ${LAUNCH_DIR} ] ; then
    echo FATAL: No Kernel found!
    exit 1
  fi

  if [ -f "${LAUNCH_DIR}/launch.params" ] ; then
    JVM_OPTIONS=$(cat "$LAUNCH_DIR/launch.params")
  fi

  JVM_OPTIONS="$JVM_OPTIONS -Droot=$GG_ROOT"
  OPTIONS="--setup-system-service false"
  if [ ! -z ${CONFIG_FILE} ]; then
    OPTIONS="$OPTIONS --config $CONFIG_FILE"
  fi
  echo "jvm options: "${JVM_OPTIONS}
  echo "kernel options: "${OPTIONS}
  java ${JVM_OPTIONS} -Dlog.store=FILE -jar "$LAUNCH_DIR/distro/lib/Greengrass.jar" ${OPTIONS}
  kernel_exit_code=$?
  echo "kernel exit at code: "${kernel_exit_code}
}

flip_link() {
  rm -r $(readlink $2) || true
  rm $2 || true
  ln -s $2 $(readlink $1)
  rm $1 || true
}

# Determine Kernel stage and proper config files based on launch directory
if [ -L "${GG_ROOT}/alts/old" ] && [ -d "${GG_ROOT}/alts/old" ]; then
  # During deployment. New kernel will be launched.
  CONFIG_FILE="$GG_ROOT/deployments/ongoing/target_config.tlog"

elif [ -L "${GG_ROOT}/alts/broken" ] && [ -d "${GG_ROOT}/alts/broken" ]; then
  # During deployment rollback. Previous kernel will be launched
  if [ ! -d "${LAUNCH_DIR}" ] && [ -d "${GG_ROOT}/alts/old" ]; then
    flip_link ${GG_ROOT}/alts/old ${LAUNCH_DIR}
  fi

  CONFIG_FILE="$GG_ROOT/deployments/ongoing/rollback_snapshot.tlog"
fi

# Launch Kernel with max 3 retries
j=1
while [ $j -le 3 ]; do
  launch_kernel
  case ${kernel_exit_code} in
  100|0)
    echo "Restarting kernel"
    # Exec loader from the same path, but the script might have changed due to kernel update
    exec "${GG_ROOT}/alts/current/distro/bin/loader"
    ;;
  101)
    echo "Rebooting host"
    sudo reboot
    ;;
  *)
    echo "Kernel exit ${kernel_exit_code}. Retrying $j times"
    ;;
  esac
  j=$(( j + 1 ))
done

# when reaching here, kernel has restarted 3 times and fails. Keep the current status and flip symlink.
# 1. If old+current: Kernel update failed. flip current to broken, old to current
if [ -d ${GG_ROOT}/alts/old ] || [ -d ${GG_ROOT}/alts/current ]; then
  flip_link ${GG_ROOT}/alts/current ${GG_ROOT}/alts/broken
  flip_link ${GG_ROOT}/alts/old ${GG_ROOT}/alts/current
fi

# 2. If current+broken: rollback failed and kernel crashed. TODO: start with empty config?

# 3. If current: no rollback option. TODO: Restart previous Kernel?

exit ${kernel_exit_code}
