plugins {
    id 'com.github.hierynomus.license'
    id 'com.github.spotbugs'
    id 'checkstyle'
}
license {
    header = rootProject.file('.license/header.txt')
    headerDefinitions {
        java_style {
            firstLine = "/*"
            endLine = "*/EOL"
            beforeEachLine = " * "
            firstLineDetectionPattern = "(\\\\s|\\\\t)*/\\\\*.*\$"
            lastLineDetectionPattern = ".*\\\\*/(\\\\s|\\\\t)*\$"
            allowBlankLines = false
            isMultiline = false
            padLines = false
        }
        batch {
            firstLine = "@REM -------------------------------"
            endLine = "@REM -------------------------------"
            beforeEachLine = "@REM "
            firstLineDetectionPattern = "@REM(\\\\s|\\\\t)*.*\$"
            lastLineDetectionPattern = "@REM(\\\\s|\\\\t)*.*\$"
            allowBlankLines = false
            isMultiline = false
            padLines = false
        }
    }
    mapping {
        java = 'java_style'
        bat = 'batch'
    }
    excludes(["*", "src/main/AndroidManifest.xml", ".gradle/**", "bin/**", "build/**",
              "codestyle/**", "src/test/greengrass-nucleus-benchmark/**",
              "src/*/resources/**", "src/**/vendored/**"])

}

spotbugs {
    effort = "max"
    ignoreFailures = false
    excludeFilter = rootProject.file("codestyle/exclude.xml")
    reportLevel = "low"
}

checkstyle {
    config = resources.text.fromFile(rootProject.file("codestyle/checkstyle.xml"))
    maxWarnings = 0
    ignoreFailures = false
    showViolations = true
}